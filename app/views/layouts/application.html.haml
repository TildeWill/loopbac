!!!
%html{:lang => "en"}
  %head
    %title Loopb.ac
    = stylesheet_link_tag    "application", :media => "all"
    = javascript_include_tag "application"
    = csrf_meta_tags
    %link{:href => "/assets/favicon.ico", :rel => "shortcut icon", :type => "image/x-icon"}
    %link{:href => "/assets/favicon.ico", :rel => "icon", :type => "image/x-icon"}
    %meta{:charset => "utf-8"}/
    %meta{:content => "width=device-width, initial-scale=1.0", :name => "viewport"}/
    %meta{:content => "", :name => "description"}/
    %meta{:content => "", :name => "author"}/
    :css
      body {
        padding-top: 60px;
        padding-bottom: 40px;
      }
      .sidebar-nav {
        padding: 9px 0;
      }

      @media (max-width: 980px) {
        /* Enable use of floated navbar text */
        .navbar-text.pull-right {
          float: none;
          padding-left: 5px;
          padding-right: 5px;
        }
      }
  %body
    .navbar.navbar-inverse.navbar-fixed-top
      .navbar-inner
        .container-fluid
          %button.btn.btn-navbar{"data-target" => ".nav-collapse", "data-toggle" => "collapse", :type => "button"}
            %span.icon-bar
            %span.icon-bar
            %span.icon-bar
          = link_to(image_tag("loopbac_logo_50.png"), root_path, class: "brand")
          .nav-collapse.collapse
            %p.navbar-text.pull-right
              - if user_signed_in?
                %span.dropdown
                  %a.navbar-link{href: "#"}
                    = image_tag(current_user.image_url, width: 30, height: 30)
            %ul.nav
              %li
                %a{:href => "#"} Dashboard
              %li
                =link_to('My Circles', circles_path)
              %li
                %a{:href => "#contact"} My Templates
    .container-fluid
      .row-fluid
        .span12
          - [:notice, :alert].each do |level|
            - unless flash[level].blank?
              .alert{class: flash_class(level)}
                %button.close{"data-dismiss" => "alert", :type => "button"} Ã—
                = flash[level]
          = yield
